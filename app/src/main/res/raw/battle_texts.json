// Text Jsoning
{"default":{"startBattle":"Battle started between %s and %s!","winBattle":"<b>%s</b> won the battle!","tieBattle":"Tie between %s and %s!","pokemon":"%s","opposingPokemon":"the opposing %s","team":"your team","opposingTeam":"the opposing team","turn":"== Turn %s ==","switchIn":"%s sent out %s!","switchInOwn":"Go! %s!","switchOut":"%s withdrew %s!","switchOutOwn":"%s, come back!","drag":"%s was dragged out!","faint":"%s fainted!","swap":"%s and %s switched places!","swapCenter":"%s moved to the center!","zEffect":" %s unleases its full-force Z-Move!","move":"%s used <b>%s</b>!","abilityActivation":" [%s's %s]","mega":" %s's %s is reacting to the Key Stone!","megaNoItem":" %s is reacting to %s's Key Stone!","megaGen6":" %s's %s is reacting to %s's Mega Bracelet!","transformMega":"%s has Mega Evolved into Mega %s!","primal":"%s's Primal Reversion! It reverted to its primal state!","zPower":" %s surrounded itself with its Z-Power!","zBroken":" %s couldn't fully protect itself and got hurt!","cant":"%s can't use %s!","cantNoMove":"%s can't move!","fail":" But it failed!","transform":"%s transformed!","typeChange":" %s transformed into the %s type!","typeChangeFromEffect":" %s's %s made it the %s type!","typeAdd":" %s type was added to %s!","start":" (%s started on %s!)","end":" %s was freed from %s!","activate":" (%s activated!)","startTeamEffect":" (%s started on %s!)","endTeamEffect":" (%s ended on %s!)","startFieldEffect":" (%s started!)","endFieldEffect":" (%s ended!)","changeAbility":" %s acquired %s!","addItem":" %s obtained one %s.","takeItem":" %s stole %s's %s!","eatItem":" %s ate its %s!","useGem":" The %s strengthened %s's power!","eatItemWeaken":" The %s weakened damage to %s!","removeItem":" %s lost its %s!","activateItem":" (%s used its %s!)","activateWeaken":" The %s weakened the damage to %s!","damage":" (%s was hurt!)","damagePercentage":" (%s lost %s of its health!)","damageFromPokemon":" %s is hurt by %s's %s!","damageFromItem":" %s is hurt by its %s!","damageFromPartialTrapping":" %s is hurt by %s!","heal":" %s restored its HP.","healFromZEffect":" %s restored its HP using its Z-Power!","healFromEffect":" %s restored HP using its %s!","boost":" %s's <u>%s</u> rose!","boost2":" %s's <u>%s</u> rose sharply!","boost3":" %s's <u>%s</u> rose drastically!","boost0":" %s's <u>%s</u> won't go any higher!","boostFromItem":" The %s raised %s's <u>%s</u>!","boost2FromItem":" The %s sharply raised %s's <u>%s</u>!","boost3FromItem":" The %s drastically raised %s's <u>%s</u>!","boostFromZEffect":" %s boosted its <u>%s</u> using its Z-Power!","boost2FromZEffect":" %s boosted its <u>%s</u> sharply using its Z-Power!","boost3FromZEffect":" %s boosted its <u>%s</u> drastically using its Z-Power!","boostMultipleFromZEffect":" %s boosted its stats using its Z-Power!","unboost":" %s's %s fell!","unboost2":" %s's %s fell harshly!","unboost3":" %s's <u>%s</u> fell severely!","unboost0":" %s's <u>%s</u> won't go any lower!","unboostFromItem":" The %s lowered %s's <u>%s</u>!","unboost2FromItem":" The %s harshly lowered %s's <u>%s</u>!","unboost3FromItem":" The %s drastically lowered %s's <u>%s</u>!","swapBoost":" %s switched stat changes with its target!","swapOffensiveBoost":" %s switched all changes to its Attack and Sp. Atk with its target!","swapDefensiveBoost":" %s switched all changes to its Defense and Sp. Def with its target!","copyBoost":" %s copied %s's stat changes!","clearBoost":" %s's stat changes were removed!","clearBoostFromZEffect":" %s returned its decreased stats to normal using its Z-Power!","invertBoost":" %s's stat changes were inverted!","clearAllBoost":" All stat changes were eliminated!","superEffective":" It's super effective!","superEffectiveSpread":" It's super effective on %s!","resisted":" It's not very effective...","resistedSpread":" It's not very effective on %s.","crit":" A critical hit!","critSpread":" A critical hit on %s!","immune":" It doesn't affect %s...","immuneNoPokemon":" It had no effect!","immuneOHKO":" %s is unaffected!","miss":" %s avoided the attack!","missNoPokemon":" %s's attack missed!","center":" Automatic center!","noTarget":" But there was no target...","ohko":" It's a one-hit KO!","combine":" The two moves have become one! It's a combined move!","hitCount":" Hit %s times!","hitCountSingular":" Hit 1 time!"},"hp":{"statName":"HP","statShortName":"HP"},"atk":{"statName":"Attack","statShortName":"Atk"},"def":{"statName":"Defense","statShortName":"Def"},"spa":{"statName":"Special Attack","statShortName":"SpA"},"spd":{"statName":"Special Defense","statShortName":"SpD"},"spe":{"statName":"Speed","statShortName":"Spe"},"accuracy":{"statName":"accuracy"},"evasion":{"statName":"evasiveness"},"spc":{"statName":"Special","statShortName":"Spc"},"stats":{"statName":"stats"},"brn":{"start":" %s was burned!","startFromItem":" %s was burned by the %s!","alreadyStarted":" %s already has a burn.","end":" %s's burn was healed.","endFromItem":" %s's %s healed its burn!","damage":" %s was hurt by its burn!"},"frz":{"start":" %s was frozen solid!","alreadyStarted":" %s is already frozen solid!","end":" %s thawed out!","endFromItem":" %s's %s defrosted it!","endFromMove":" %s's %s melted the ice!","cant":"%s is frozen solid!"},"par":{"start":" %s is paralyzed! It may be unable to move!","alreadyStarted":" %s is already paralyzed.","end":" %s was cured of paralysis.","endFromItem":" %s's %s cured its paralysis!","cant":"%s is paralyzed! It can't move!"},"psn":{"start":" %s was poisoned!","alreadyStarted":" %s is already poisoned.","end":" %s was cured of its poisoning.","endFromItem":" %s's %s cured its poison!","damage":" %s was hurt by poison!"},"tox":{"start":" %s was badly poisoned!","startFromItem":" %s was badly poisoned by the %s!","end":"#psn","endFromItem":"#psn","alreadyStarted":"#psn","damage":"#psn"},"slp":{"start":" %s fell asleep!","startFromRest":" %s slept and became healthy!","alreadyStarted":" %s is already asleep!","end":" %s woke up!","endFromItem":" %s's %s woke it up!","cant":"%s is fast asleep."},"confusion":{"start":" %s became confused!","startFromFatigue":" %s became confused due to fatigue!","end":" %s snapped out of its confusion!","endFromItem":" %s's %s snapped it out of its confusion!","alreadyStarted":" %s is already confused!","activate":" %s is confused!","damage":"It hurt itself in its confusion!"},"drain":{"heal":" %s had its energy drained!"},"flinch":{"cant":"%s flinched and couldn't move!"},"healreplacement":{"activate":" %s will restore its replacement's HP using its Z-Power!"},"nopp":{"cant":"%s used %s!\n But there was no PP left for the move!"},"recharge":{"cant":"%s must recharge!"},"recoil":{"damage":" %s is damaged by the recoil!"},"unboost":{"fail":" %s's stats were not lowered!","failSingular":" %s's %s was not lowered!"},"struggle":{"activate":" %s has no moves left!"},"trapped":{"start":" %s can no longer escape!"},"sandstorm":{"weatherName":"Sandstorm","start":" A sandstorm kicked up!","end":" The sandstorm subsided.","upkeep":" The sandstorm is raging.","damage":" %s is buffeted by the sandstorm!"},"sunnyday":{"weatherName":"Sun","start":" The sunlight turned harsh!","end":" The sunlight faded.","upkeep":" (The sunlight is strong!)"},"raindance":{"weatherName":"Rain","start":" It started to rain!","end":" The rain stopped.","upkeep":" (Rain continues to fall!)"},"hail":{"weatherName":"Hail","start":" It started to hail!","end":" The hail stopped.","upkeep":" The hail is crashing down.","damage":" %s is buffeted by the hail!"},"desolateland":{"weatherName":"Intense Sun","start":" The sunlight turned extremely harsh!","end":" The extremely harsh sunlight faded.","block":" The extremely harsh sunlight was not lessened at all!","blockMove":" The Water-type attack evaporated in the harsh sunlight!"},"primordialsea":{"weatherName":"Heavy Rain","start":" A heavy rain began to fall!","end":" The heavy rain has lifted!","block":" There is no relief from this heavy rain!","blockMove":" The Fire-type attack fizzled out in the heavy rain!"},"deltastream":{"weatherName":"Strong Winds","start":" Mysterious strong winds are protecting Flying-type Pokémon!","end":" The mysterious strong winds have dissipated!","activate":" The mysterious strong winds weakened the attack!","block":" The mysterious strong winds blow on regardless!"},"electricterrain":{"start":" An electric current runs across the battlefield!","end":" The electricity disappeared from the battlefield.","block":" %s surrounds itself with electrified terrain!"},"grassyterrain":{"start":" Grass grew to cover the battlefield!","end":" The grass disappeared from the battlefield."},"mistyterrain":{"start":" Mist swirls around the battlefield!","end":" The mist disappeared from the battlefield.","block":" %s surrounds itself with a protective mist!"},"psychicterrain":{"start":" The battlefield got weird!","end":" The weirdness disappeared from the battlefield!","block":" %s surrounds itself with psychic terrain!"},"gravity":{"start":" Gravity intensified!","end":" Gravity returned to normal!","cant":"%s can't use %s because of gravity!","activate":"%s couldn't stay airborne because of gravity!"},"magicroom":{"start":" It created a bizarre area in which Pokémon's held items lose their effects!","end":" Magic Room wore off, and held items' effects returned to normal!"},"mudsport":{"start":" Electricity's power was weakened!","end":" The effects of Mud Sport have faded."},"trickroom":{"start":" %s twisted the dimensions!","end":" The twisted dimensions returned to normal!"},"watersport":{"start":" Fire's power was weakened!","end":" The effects of Water Sport have faded."},"wonderroom":{"start":" It created a bizarre area in which Defense and Sp. Def stats are swapped!","end":" Wonder Room wore off, and Defense and Sp. Def stats returned to normal!"},"afteryou":{"activate":" %s took the kind offer!"},"aquaring":{"start":" %s surrounded itself with a veil of water!","heal":" A veil of water restored %s's HP!"},"aromatherapy":{"activate":" A soothing aroma wafted through the area!"},"attract":{"start":" %s fell in love!","startFromItem":" %s fell in love from the %s!","end":" %s got over its infatuation!","endFromItem":" %s cured its infatuation using its %s!","activate":" %s is in love with %s!","cant":"%s is immobilized by love!"},"auroraveil":{"start":" Aurora Veil made %s stronger against physical and special moves!","end":" %s's Aurora Veil wore off!"},"autotomize":{"start":" %s became nimble!"},"beakblast":{"start":" %s started heating up its beak!"},"beatup":{"activate":" %s's attack!"},"bestow":{"takeItem":" %s received %s from %s!"},"bide":{"start":" %s is storing energy!","end":" %s unleashed its energy!","activate":" %s is storing energy!"},"bind":{"start":" %s was squeezed by %s!","move":"#wrap"},"brickbreak":{"activate":" %s shattered %s's protections!"},"bellydrum":{"boost":" %s cut its own HP and maximized its Attack!"},"bounce":{"prepare":"%s sprang up!"},"bugbite":{"removeItem":" %s stole and ate its target's %s!"},"burnup":{"typeChange":" %s burned itself out!"},"celebrate":{"activate":" Congratulations, %s!"},"charge":{"start":" %s began charging power!"},"clamp":{"start":" %s clamped down on %s!","move":"#wrap"},"craftyshield":{"start":" Crafty Shield protected %s!","block":" Crafty Shield protected %s!"},"crash":{"damage":" %s kept going and crashed!"},"curse":{"start":" %s cut its own HP and put a curse on %s!","damage":" %s is afflicted by the curse!"},"darkvoid":{"fail":"But %s can't use the move!","failWrongForme":"But %s can't use it the way it is now!"},"destinybond":{"start":"%s is hoping to take its attacker down with it!","activate":" %s took its attacker down with it!"},"dig":{"prepare":"%s burrowed its way under the ground!"},"disable":{"start":" %s's %s was disabled!","end":" %s's move is no longer disabled!"},"dive":{"prepare":"%s hid underwater!"},"doomdesire":{"start":" %s chose Doom Desire as its destiny!","activate":" %s took the Doom Desire attack!"},"dragonascent":{"megaNoItem":" %s's fervent wish has reached %s!"},"electrify":{"start":" %s's moves have been electrified!"},"embargo":{"start":" %s can't use items anymore!","end":" %s can use items again!"},"encore":{"start":" %s received an encore!","end":" %s's encore ended!"},"endure":{"start":" %s braced itself!","activate":" %s endured the hit!"},"fairylock":{"activate":" No one will be able to run away during the next turn!"},"feint":{"activate":" %s fell for the feint!"},"firepledge":{"activate":"#waterpledge","start":" A sea of fire enveloped %s!","end":" The sea of fire around %s disappeared!","damage":" %s is hurt by the sea of fire!"},"firespin":{"start":" %s became trapped in the fiery vortex!","move":"#wrap"},"flameburst":{"damage":" The bursting flame hit %s!"},"fling":{"removeItem":" %s flung its %s!"},"fly":{"prepare":"%s flew up high!"},"focusenergy":{"start":" %s is getting pumped!","startFromItem":" %s used the %s to get pumped!","startFromZEffect":" %s boosted its critical-hit ratio using its Z-Power!"},"focuspunch":{"start":" %s is tightening its focus!","cant":"%s lost its focus and couldn't move!"},"followme":{"start":" %s became the center of attention!","startFromZEffect":" %s became the center of attention!"},"foresight":{"start":" %s was identified!"},"freezeshock":{"prepare":" %s became cloaked in a freezing light!"},"futuresight":{"start":" %s foresaw an attack!","activate":" %s took the Future Sight attack!"},"gastroacid":{"start":" %s's Ability was suppressed!"},"geomancy":{"prepare":"%s is absorbing power!"},"grasspledge":{"activate":"#waterpledge","start":" A swamp enveloped %s!","end":" The swamp around %s disappeared!"},"grudge":{"activate":" %s's %s lost all of its PP due to the grudge!","start":"%s wants its target to bear a grudge!"},"guardsplit":{"activate":" %s shared its guard with the target!"},"happyhour":{"activate":" Everyone is caught up in the happy atmosphere!"},"healbell":{"activate":" A bell chimed!"},"healblock":{"start":" %s was prevented from healing!","end":" %s's Heal Block wore off!","cant":"%s can't use %s because of Heal Block!"},"healingwish":{"heal":" The healing wish came true for %s!"},"helpinghand":{"start":" %s is ready to help %s!"},"highjumpkick":{"damage":"#crash"},"hyperspacefury":{"activate":"#shadowforce","fail":"#darkvoid"},"hyperspacehole":{"activate":"#shadowforce"},"iceburn":{"prepare":" %s became cloaked in freezing air!"},"imprison":{"start":" %s sealed any moves its target shares with it!","cant":"%s can't use its sealed %s!"},"incinerate":{"removeItem":" %s's %s was burned up!"},"infestation":{"start":" %s has been afflicted with an infestation by %s!"},"ingrain":{"start":" %s planted its roots!","block":" %s anchored itself with its roots!","heal":" %s absorbed nutrients with its roots!"},"instruct":{"activate":" %s used the move instructed by %s!"},"iondeluge":{"activate":" A deluge of ions showers the battlefield!"},"jumpkick":{"damage":"#crash"},"knockoff":{"removeItem":" %s knocked off %s's %s!"},"laserfocus":{"start":" %s concentrated intensely!"},"leechseed":{"start":" %s was seeded!","end":" %s was freed from Leech Seed!","damage":" %s's health is sapped by Leech Seed!"},"lightscreen":{"start":" Light Screen made %s stronger against special moves!","end":" %s's Light Screen wore off!","startGen1":" %s's protected against special attacks!"},"lockon":{"start":" %s took aim at %s!"},"luckychant":{"start":" Lucky Chant shielded %s from critical hits!","end":" %s's Lucky Chant wore off!"},"lunardance":{"heal":" %s became cloaked in mystical moonlight!"},"magiccoat":{"start":" %s shrouded itself with Magic Coat!","move":"%s bounced the %s back!"},"magikarpsrevenge":{"fail":"#darkvoid"},"magmastorm":{"start":" %s became trapped by swirling magma!"},"magnitude":{"activate":" Magnitude %s!"},"matblock":{"start":" %s intends to flip up a mat and block incoming attacks!","block":" %s was blocked by the kicked-up mat!"},"magnetrise":{"start":" %s levitated with electromagnetism!","end":" %s's electromagnetism wore off!"},"memento":{"heal":" %s's HP was restored by the Z-Power!"},"metronome":{"move":"Waggling a finger let it use %s!"},"mimic":{"start":" %s learned %s!"},"mindreader":{"start":"#lockon"},"miracleeye":{"start":"#foresight"},"mist":{"start":" %s became shrouded in mist!","end":" %s is no longer protected by mist!","block":" %s is protected by the mist!"},"naturepower":{"move":"Nature Power turned into %s!"},"nightmare":{"start":" %s began having a nightmare!","damage":" %s is locked in a nightmare!"},"painsplit":{"activate":" The battlers shared their pain!"},"partingshot":{"heal":"#memento"},"payday":{"activate":" Coins were scattered everywhere!"},"perishsong":{"start":" All Pokémon that heard the song will faint in three turns!","activate":" %s's perish count fell to %s."},"phantomforce":{"prepare":"#shadowforce","activate":"#shadowforce"},"pluck":{"removeItem":"#bugbite"},"powder":{"start":" %s is covered in powder!","activate":" When the flame touched the powder on the Pokémon, it exploded!"},"powersplit":{"activate":" %s shared its power with the target!"},"powertrick":{"start":" %s switched its Attack and Defense!","end":"#.start"},"protect":{"start":" %s protected itself!","block":" %s protected itself!"},"pursuit":{"activate":" (%s is being withdrawn...)"},"quash":{"activate":" %s's move was postponed!"},"quickguard":{"start":" Quick Guard protected %s!","block":" Quick Guard protected %s!"},"ragepowder":{"start":"#followme","startFromZEffect":"#followme"},"razorwind":{"prepare":" %s whipped up a whirlwind!"},"recycle":{"addItem":" %s found one %s!"},"reflect":{"start":" Reflect made %s stronger against physical moves!","end":" %s's Reflect wore off!","startGen1":" %s gained armor!"},"reflecttype":{"typeChange":" %s's type became the same as %s's type!"},"roleplay":{"changeAbility":" %s copied %s's %s Ability!"},"roost":{"start":" (%s loses Flying type this turn.)"},"safeguard":{"start":" %s cloaked itself in a mystical veil!","end":" %s is no longer protected by Safeguard!","block":" %s is protected by Safeguard!"},"sandtomb":{"start":" %s became trapped by the quicksand!"},"shadowforce":{"activate":" It broke through %s's protection!","prepare":"%s vanished instantly!"},"shelltrap":{"start":" %s set a shell trap!","prepare":" %s set a shell trap!","cant":"%s's shell trap didn't work!"},"sketch":{"activate":" %s sketched %s!"},"skillswap":{"activate":" %s swapped Abilities with its target!"},"skullbash":{"prepare":"%s tucked in its head!"},"skyattack":{"prepare":"%s became cloaked in a harsh light!"},"skydrop":{"prepare":"%s took %s into the sky!","end":" %s was freed from the Sky Drop!","failSelect":"Sky Drop won't let %s go!","failTooHeavy":" %s is too heavy to be lifted!"},"smackdown":{"start":" %s fell straight down!"},"snatch":{"start":" %s waits for a target to make a move!","activate":" %s snatched %s's move!"},"solarbeam":{"prepare":" %s absorbed light!"},"solarblade":{"prepare":"#solarbeam"},"spectralthief":{"clearBoost":" %s stole the target's boosted stats!"},"speedswap":{"activate":" %s switched Speed with its target!"},"spikes":{"start":" Spikes were scattered on the ground all around %s!","end":" The spikes disappeared from the ground around %s!","damage":" %s is hurt by the spikes!"},"spikyshield":{"damage":"#roughskin"},"spite":{"activate":" It reduced the PP of %s's %s by %s!"},"splash":{"activate":" But nothing happened!"},"spotlight":{"start":"#followme","startFromZEffect":"#followme"},"stealthrock":{"start":" Pointed stones float in the air around %s!","end":" The pointed stones disappeared from around %s!","damage":" Pointed stones dug into %s!"},"stickyweb":{"start":" A sticky web spreads out on the ground around %s!","end":" The sticky web has disappeared from the ground around %s!","activate":" %s was caught in a sticky web!"},"stockpile":{"start":" %s stockpiled %s!","end":" %s's stockpiled effect wore off!"},"substitute":{"start":" %s put in a substitute!","alreadyStarted":" %s already has a substitute!","end":" %s's substitute faded!","fail":" But it does not have enough HP left to make a substitute!","activate":" The substitute took damage for %s!"},"switcheroo":{"activate":"#trick"},"tailwind":{"start":" The Tailwind blew from behind %s!","end":" %s's Tailwind petered out!"},"taunt":{"start":" %s fell for the taunt!","end":" %s's taunt wore off!","cant":"%s can't use %s after the taunt!"},"telekinesis":{"start":" %s was hurled into the air!","end":" %s was freed from the telekinesis!"},"throatchop":{"cant":"The effects of Throat Chop prevent %s from using certain moves!"},"torment":{"start":" %s was subjected to torment!","end":" %s's torment wore off!"},"toxicspikes":{"start":" Poison spikes were scattered on the ground all around %s!","end":" The poison spikes disappeared from the ground around %s!"},"transform":{"transform":"%s transformed into %s!"},"trick":{"activate":" %s switched items with its target!"},"uproar":{"start":" %s caused an uproar!","end":" %s calmed down.","upkeep":" %s is making an uproar!","block":" But the uproar kept %s awake!","blockSelf":" %s can't sleep in an uproar!"},"uturn":{"switchOut":"%s went back to %s!"},"voltswitch":{"switchOut":"#uturn"},"waterpledge":{"activate":" %s is waiting for %s's move...","start":" A rainbow appeared in the sky on %s's side!","end":" The rainbow on %s's side disappeared!"},"weatherball":{"move":"Breakneck Blitz turned into %s due to the weather!"},"whirlpool":{"start":" %s became trapped in the vortex!"},"wideguard":{"start":" Wide Guard protected %s!","block":" Wide Guard protected %s!"},"wish":{"heal":" %s's wish came true!"},"wrap":{"start":" %s was wrapped by %s!","move":"%s's attack continues!"},"yawn":{"start":" %s grew drowsy!"},"aftermath":{"damage":" %s is hurt!"},"airlock":{"start":" The effects of the weather disappeared."},"angerpoint":{"boost":" %s maxed its Attack!"},"anticipation":{"activate":" %s shuddered!"},"aromaveil":{"block":" %s is protected by an aromatic veil!"},"aurabreak":{"start":" %s reversed all other Pokémon's auras!"},"baddreams":{"damage":" %s is tormented!"},"battlebond":{"activate":" %s became fully charged due to its bond with its Trainer!","transform":"%s became Ash-Greninja!"},"blacksludge":{"heal":" %s restored a little HP using its Black Sludge!"},"cloudnine":{"start":"#airlock"},"comatose":{"start":" %s is drowsing!"},"damp":{"block":" %s cannot use %s!"},"darkaura":{"start":" %s is radiating a dark aura!"},"dazzling":{"block":"#damp"},"disguise":{"block":" Its disguise served it as a decoy!","transform":"%s's disguise was busted!"},"dryskin":{"damage":" (%s was hurt by its Dry Skin.)"},"fairyaura":{"start":" %s is radiating a fairy aura!"},"flashfire":{"start":" The power of %s's Fire-type moves rose!"},"flowerveil":{"block":" %s surrounded itself with a veil of petals!"},"forewarn":{"activate":" It was alerted to %s's %s!","activateNoTarget":" %s's Forewarn alerted it to %s!"},"frisk":{"activate":" %s frisked %s and found its %s!","activateNoTarget":" %s frisked its target and found one %s!"},"harvest":{"addItem":" %s harvested one %s!"},"illusion":{"end":" %s's illusion wore off!"},"innardsout":{"damage":"#aftermath"},"ironbarbs":{"damage":"#roughskin"},"leftovers":{"heal":" %s restored a little HP using its Leftovers!"},"lightningrod":{"activate":" %s took the attack!"},"liquidooze":{"damage":" %s sucked up the liquid ooze!"},"magicbounce":{"move":"#magiccoat"},"mindblown":{"damage":" (%s cut its own HP to power up its move!)"},"moldbreaker":{"start":" %s breaks the mold!"},"mummy":{"changeAbility":" %s's Ability became Mummy!"},"naturalcure":{"activate":" (%s is cured by its Natural Cure!)"},"owntempo":{"block":" %s doesn't become confused!"},"persistent":{"activate":" %s extends %s by 2 turns!"},"pickup":{"addItem":"#recycle"},"powerconstruct":{"activate":" You sense the presence of many!","transform":"%s transformed into its Complete Forme!"},"powerofalchemy":{"changeAbility":"#receiver"},"pressure":{"start":" %s is exerting its pressure!"},"rebound":{"move":"#magiccoat"},"receiver":{"changeAbility":" %s's %s was taken over!"},"rockyhelmet":{"damage":" %s was hurt by the Rocky Helmet!"},"roughskin":{"damage":" %s was hurt!"},"schooling":{"transform":"%s formed a school!","transformEnd":"%s stopped schooling!"},"shellbell":{"heal":" %s restored a little HP using its Shell Bell!"},"shieldsdown":{"transform":"Shields Down deactivated!\n(%s shielded itself.)","transformEnd":"Shields Down activated!\n(%s stopped shielding itself.)"},"slowstart":{"start":" %s can't get it going!","end":" %s finally got its act together!"},"solarpower":{"damage":" (%s was hurt by its Solar Power.)"},"stancechange":{"transform":"Changed to Blade Forme!","transformEnd":"Changed to Shield Forme!"},"stickyhold":{"block":" %s's item cannot be removed!"},"stormdrain":{"activate":"#lightningrod"},"sturdy":{"activate":" %s endured the hit!"},"suctioncups":{"block":" %s anchors itself!"},"sweetveil":{"block":" %s surrounded itself with a veil of sweetness!"},"symbiosis":{"activate":" %s shared its %s with %s!"},"telepathy":{"block":" %s avoids attacks by its ally Pokémon!"},"teravolt":{"start":" %s is radiating a bursting aura!"},"trace":{"changeAbility":" %s traced %s's %s!"},"truant":{"cant":"%s is loafing around!"},"turboblaze":{"start":" %s is radiating a blazing aura!"},"unnerve":{"start":" %s is too nervous to eat Berries!"},"zenmode":{"transform":"Zen Mode triggered!","transformEnd":"Zen Mode ended!"},"airballoon":{"start":" %s floats in the air with its Air Balloon!","end":" %s's Air Balloon popped!"},"custapberry":{"activate":" %s's Custap Berry let it move first!"},"ejectbutton":{"end":" %s is switched out with the Eject Button!"},"focusband":{"activate":" %s hung on using its Focus Band!"},"focussash":{"end":" %s hung on using its Focus Sash!"},"leppaberry":{"activate":" %s restored PP to its %s move using Leppa Berry!"},"lifeorb":{"damage":" %s lost some of its HP!"},"mysteryberry":{"activate":" %s restored PP to its %s move using Mystery Berry!"},"powerherb":{"end":" %s became fully charged due to its Power Herb!"},"protectivepads":{"block":" %s protected itself with the Protective Pads!"},"quickclaw":{"activate":" %s's Quick Claw let it move first!"},"redcard":{"end":" %s held up its Red Card against %s!"},"safetygoggles":{"block":" %s is not affected by %s thanks to its Safety Goggles!"},"ultranecroziumz":{"transform":" Bright light is about to burst out of %s!","activate":"%s regained its true power through Ultra Burst!"},"whiteherb":{"end":" %s returned its status to normal using its White Herb!"}}